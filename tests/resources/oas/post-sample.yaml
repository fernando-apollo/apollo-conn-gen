openapi: 3.1.0
info:
  title: Sample Post API
  description: Sample Post API
  version: 1.0.0
servers:
  - url: 'https://localhost:8080/v1/api'


paths:
  /status:
    post:
      summary: Update user status
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatusUpdate'
            example: |
              {
                "username": "test",
                "status": "online",
                "address": {
                  "street": "1234 Elm St",
                  "city": "Springfield",
                  "postalCode": "12345"
                }
              }
      responses:
        '200':
          description: Status updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
              example: |
                {
                  "message": "Status updated successfully"
                }
  /user:
    post:
      summary: Create a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BaseUser'
                - $ref: '#/components/schemas/ExtraInfo'
            example:
              example: |
                {
                  "username": "john_doe",
                  "email": "john@example.com",
                  "age": 30,
                  "subscribed": true
                }
      responses:
        '201':
          description: User created
  /event:
    post:
      summary: Submit a user event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/LoginEvent'
                - $ref: '#/components/schemas/LogoutEvent'
            example: |
              {
                "eventType": "login",
                "username": "jane_doe",
                "timestamp": "2025-03-31T12:00:00Z"
              }
      responses:
        '200':
          description: Event received
components:
  schemas:
    StatusUpdate:
      type: object
      properties:
        username:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        status:
          type: string
          enum:
            - offline
            - online
            - away
      required:
        - username
        - status

    StatusResponse:
      type: object
      properties:
        message:
          type: string
    Address:
      type: object
      properties:
        street:
          type: string
        city:
          type: string
        postalCode:
          type: string
    BaseUser:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
      required: [username, email]

    ExtraInfo:
      type: object
      properties:
        age:
          type: integer
        subscribed:
          type: boolean
    LoginEvent:
      type: object
      properties:
        eventType:
          type: string
          enum: [login]
        username:
          type: string
        timestamp:
          type: string
          format: date-time
      required: [eventType, username, timestamp]

    LogoutEvent:
      type: object
      properties:
        eventType:
          type: string
          enum: [logout]
        username:
          type: string
        timestamp:
          type: string
          format: date-time
      required: [eventType, username, timestamp]